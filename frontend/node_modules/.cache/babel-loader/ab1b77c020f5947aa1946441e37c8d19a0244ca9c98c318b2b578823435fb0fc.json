{"ast":null,"code":"var _jsxFileName = \"C:\\\\stufffff\\\\crawler\\\\frontend\\\\src\\\\components\\\\crawler.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crawler = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await axios.post('http://localhost:5000/crawl', {\n      url\n    });\n    setUrl('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Web Crawler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        onChange: e => setUrl(e.target.value),\n        placeholder: \"Enter URL to crawl\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Start Crawling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Crawler, \"ZV/BRor2ecoM1gSD+06O4c7I8qc=\");\n_c = Crawler;\nexport default Crawler;\nvar _c;\n$RefreshReg$(_c, \"Crawler\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Crawler","_s","url","setUrl","handleSubmit","e","preventDefault","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/stufffff/crawler/frontend/src/components/crawler.js"],"sourcesContent":["// client/src/App.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Crawler = () => {\r\n  const [url, setUrl] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post('http://localhost:5000/crawl', { url });\r\n    setUrl('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Web Crawler</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={url}\r\n          onChange={(e) => setUrl(e.target.value)}\r\n          placeholder=\"Enter URL to crawl\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Start Crawling</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Crawler;\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMT,KAAK,CAACU,IAAI,CAAC,6BAA6B,EAAE;MAAEL;IAAI,CAAC,CAAC;IACxDC,MAAM,CAAC,EAAE,CAAC;EACZ,CAAC;EAED,oBACEJ,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBb,OAAA;MAAMc,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAC3BT,OAAA;QACEe,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEb,GAAI;QACXc,QAAQ,EAAGX,CAAC,IAAKF,MAAM,CAACE,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QACxCG,WAAW,EAAC,oBAAoB;QAChCC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFb,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACX,EAAA,CAxBID,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}